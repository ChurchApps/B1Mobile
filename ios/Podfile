require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'

# use_modular_headers! # <-- Commented to avoid UIKit/module build errors
install! 'cocoapods', :deterministic_uuids => false

prepare_react_native_project!

pre_install do |installer|
  installer.pod_targets.each do |pod|
    if pod.name.eql?('React-RuntimeHermes')
      def pod.build_type;
        Pod::BuildType.static_library
      end
    end
  end
end

target 'B1Mobile' do
  use_expo_modules!

  # Firebase Core manually added to fix module not found error
  pod 'FirebaseCore', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true

  config_command = if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"]
  else
    [
      'npx',
      'expo-modules-autolinking',
      'react-native-config',
      '--json',
      '--platform',
      'ios'
    ]
  end

  config = use_native_modules!(config_command)

  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => false,
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',
    )

    installer.target_installation_results.pod_target_installation_results
      .each do |_, target_installation_result|
        target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
          resource_bundle_target.build_configurations.each do |config|
            config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
          end
        end
      end

    installer.pods_project.targets.each do |target|
      if target.name.start_with?("React-") && target.name != "React-RuntimeHermes"
        target.build_configurations.each do |config|
          config.build_settings.delete('DEFINES_MODULE')
        end
      end

      if target.name == "hermes-engine"
        target.build_configurations.each do |config|
          config.build_settings['DEFINES_MODULE'] = 'YES'
        end
      end
    end
  end
end
